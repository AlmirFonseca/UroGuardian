
# DDL - Data Definition Language (Criação e Estrutura das Tabelas)
ddl:

  # ----------------------------------------
  # Tabela de dispositivos
  # ----------------------------------------

  create_table_device: |
    CREATE TABLE IF NOT EXISTS device (
      device_id INTEGER PRIMARY KEY AUTOINCREMENT,            -- ID único do dispositivo
      mac_address TEXT UNIQUE,                                -- Endereço MAC do dispositivo
      name TEXT,                                              -- Nome do dispositivo (ex: "Sensor de Urina")
      status TEXT CHECK (status in ('active', 'inactive'))   -- Status do dispositivo (ativo ou inativo)
    )

  # ----------------------------------------
  # Tabela de controle de usuarios
  # ----------------------------------------

  # Tabela para armazenar os dados de controle manual dos usuarios
  create_table_user: |
    CREATE TABLE IF NOT EXISTS user (
      user_id INTEGER PRIMARY KEY AUTOINCREMENT,                          -- ID único do Paciente
      nfc_card_uid_hash TEXT UNIQUE,                                 -- Hash do UID do cartão NFC
      first_use_datetime TEXT DEFAULT CURRENT_TIMESTAMP,             -- Data e hora do primeiro uso do dispositivo
      num_data_collections INTEGER DEFAULT 1                         -- Número de coletas de dados realizadas
    )

  # ----------------------------------------
  # Tabela de monitoramento da urina
  # ----------------------------------------s

  create_table_urine_samples: |
    CREATE TABLE IF NOT EXISTS urine_samples (
      sample_id INTEGER PRIMARY KEY AUTOINCREMENT,                          -- ID único da amostra
      user_id INTEGER,                                               -- ID do usuário (relacionamento com a tabela de usuários)
      device_id INTEGER,                                             -- ID do dispositivo (relacionamento com a tabela de dispositivos)
      start_timestamp TEXT,                                          -- Data e hora de início da coleta da amostra
      end_timestamp TEXT,                                            -- Data e hora de término da coleta da amostra
      nfc_timestamp TEXT,                                            -- Timestamp do momento da leitura NFC (se houve)
      hydration_level TEXT,                                          -- Nível de hidratação
      FOREIGN KEY (device_id) REFERENCES device(device_id),                 -- Relacionamento com a tabela de dispositivos
      FOREIGN KEY (user_id) REFERENCES user(user_id)                      -- Relacionamento com a tabela de usuários
    )
    
  # ----------------------------------------
  # Tabelas relacionadas a leituras de espectro
  # ----------------------------------------

  # Tabela para armazenar as leituras do espectro (dados de canais do sensor de cores e configurações de LED)
  create_table_spectrum_datapoints: |
    CREATE TABLE IF NOT EXISTS spectrum_datapoints (
      spectrum_id INTEGER PRIMARY KEY AUTOINCREMENT,     -- Identificador único
      sample_id INTEGER,                        -- ID da amostra de dados (relacionamento com a tabela urine_samples)
      device_id INTEGER,                       -- ID do dispositivo que realizou a leitura
      timestamp TEXT,                           -- Data e hora da leitura
      batch INTEGER,                            -- ID do lote de amostras (1, 2, 3, ...)
      flag INTEGER,                             -- Flag para indicar o status da leitura (1: primeira amostra, 0: amostra intermediária, -1: última amostra)
      led_color TEXT,                           -- Cor do LED utilizado na medição (ex: "R" (red), "G" (green), "B" (blue), "W" (white), "IR" (infrared), "UV" (ultraviolet))
      led_intensity INTEGER,                    -- Intensidade do LED (0-100%)
      channel_415nm INTEGER,                    -- Leitura do canal de 415nm
      channel_445nm INTEGER,                    -- Leitura do canal de 445nm
      channel_480nm INTEGER,                    -- Leitura do canal de 480nm
      channel_515nm INTEGER,                    -- Leitura do canal de 515nm
      channel_555nm INTEGER,                    -- Leitura do canal de 555nm
      channel_590nm INTEGER,                    -- Leitura do canal de 590nm
      channel_630nm INTEGER,                    -- Leitura do canal de 630nm
      channel_680nm INTEGER,                    -- Leitura do canal de 680nm
      channel_clear INTEGER,                    -- Leitura do canal clear
      channel_nir INTEGER,                      -- Leitura do canal near-infrared (NIR)
      FOREIGN KEY (sample_id) REFERENCES urine_samples(sample_id)  -- Relacionamento com a tabela de amostras de dados
      FOREIGN KEY (device_id) REFERENCES device(device_id)  -- Relacionamento com a tabela de dispositivos
    )

  # ----------------------------------------
  # Tabelas relacionadas ao monitoramento do sistema
  # ----------------------------------------

  # Tabela para armazenar os dados do monitoramento do sistema (uso de CPU, RAM, rede, etc.)
  # battery_level REAL,                    -- Nível da bateria (em %)
  create_table_system_telemetry: |
    CREATE TABLE IF NOT EXISTS system_telemetry (
      sys_telemetry_id INTEGER PRIMARY KEY AUTOINCREMENT,  -- Identificador único
      device_id INTEGER,                     -- ID do dispositivo (relacionamento com a tabela de dispositivos)
      timestamp TEXT,                        -- Data e hora do registro
      uptime_ms INTEGER,                     -- Tempo de atividade do sistema em milissegundos
      cpu_frequency REAL,                  -- Frequência atual da CPU em MHz
      ram_usage REAL,                        -- Percentual de uso de RAM
      temp REAL,                         -- Temperatura da CPU
      wifi_ssid TEXT,                        -- SSID da rede Wi-Fi conectada
      wifi_signal REAL,              -- Força do sinal Wi-Fi (em dBm)
      ip TEXT,                             -- Endereço IP atribuído ao dispositivo
      sketch_md5 TEXT,                     -- Hash MD5 do sketch em execução
      FOREIGN KEY (device_id) REFERENCES device(device_id)  -- Relacionamento com a tabela de dispositivos
    )

  # ----------------------------------------
  # Tabela para log de erros
  # ----------------------------------------

  create_table_logs: |
    CREATE TABLE IF NOT EXISTS logs (
      log_id INTEGER PRIMARY KEY AUTOINCREMENT,  -- ID único do erro
      device_id INTEGER,                     -- ID do dispositivo associado ao erro
      timestamp TEXT,                        -- Data e hora do erro
      code TEXT,                       -- Código do erro
      message TEXT,                    -- Mensagem de erro
      FOREIGN KEY (device_id) REFERENCES device(device_id)  -- Relacionamento com a tabela de dispositivos
    )


dml:

  # ----------------------------------------
  # DML - Data Manipulation Language (Queries de Inserção)
  # ----------------------------------------

  # Tabela de dispositivos
  insert_device: |
    INSERT INTO device (mac_address, name, status)
    VALUES (?, ?, ?)

  # Tabela de usuários
  insert_user: |
    INSERT INTO user (nfc_card_uid_hash, first_use_datetime, num_data_collections) 
    VALUES (?, DATETIME('now'), 1)


  # Tabela de amostras de urina
  insert_urine_sample: |
    INSERT INTO urine_samples (
      user_id, device_id, start_timestamp, end_timestamp, nfc_timestamp, hydration_level
    )
    VALUES (?, ?, ?, ?, ?, ?)

  # Tabela de leituras do espectro
  insert_spectrum_datapoint: |
    INSERT INTO spectrum_datapoints (
      timestamp, batch, flag, led_color, led_intensity,
      channel_415nm, channel_445nm, channel_480nm, channel_515nm,
      channel_555nm, channel_590nm, channel_630nm, channel_680nm,
      channel_clear, channel_nir, device_id, sample_id
    )
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

  # Tabela de monitoramento do sistema
  insert_system_telemetry: |
    INSERT INTO system_telemetry (
      device_id, timestamp, uptime_ms, cpu_frequency, ram_usage, temp, wifi_ssid, wifi_signal, ip, sketch_md5
    )
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

  # Tabela de logs de erro
  insert_logs: |
    INSERT INTO logs (device_id, timestamp, code, message)
    VALUES (?, ?, ?, ?)



fetch:

  fetch_data: |
    SELECT {columns} 
    FROM {table} 
    WHERE {condition} 
    ORDER BY {order_by} 
    LIMIT {limit}

  fetch_user_id: |
    SELECT user_id 
    FROM user WHERE 
    nfc_card_uid_hash = ?
    LIMIT 1

  fetch_device_id: |
    SELECT device_id 
    FROM device 
    WHERE mac_address = ?
    LIMIT 1

  fetch_last_system_telemetry: |
    SELECT * 
    FROM system_telemetry 
    WHERE device_id = ? 
    ORDER BY timestamp DESC 
    LIMIT 1

  fetch_last_log: |
    SELECT * 
    FROM logs 
    WHERE device_id = ? 
    ORDER BY timestamp DESC 
    LIMIT 1

  fetch_logs: |
    SELECT * 
    FROM logs 
    ORDER BY timestamp DESC 
    LIMIT 1000

  fetch_spectrum_datapoints_by_sample: |
    SELECT * 
    FROM spectrum_datapoints 
    WHERE sample_id = ? 
    ORDER BY spectrum_id ASC

  fetch_urine_sample_by_id: |
    SELECT * 
    FROM urine_samples 
    WHERE sample_id = ? 
    LIMIT 1

  fetch_latest_urine_sample_id: |
    SELECT sample_id 
    FROM urine_samples 
    ORDER BY sample_id DESC 
    LIMIT 1

  fetch_user_samples_history: |
    SELECT * 
    FROM urine_samples 
    WHERE user_id = ? 
    ORDER BY start_timestamp DESC 

  # fetch_user_history: |
  #   SELECT 
  #     us.sample_id, us.start_timestamp, us.end_timestamp, us.hydration_level,
  #     sd.timestamp AS datapoint_timestamp, sd.batch, sd.flag, sd.led_color, sd.led_intensity,
  #     sd.channel_415nm, sd.channel_445nm, sd.channel_480nm, sd.channel_515nm,
  #     sd.channel_555nm, sd.channel_590nm, sd.channel_630nm, sd.channel_680nm,
  #     sd.channel_clear, sd.channel_nir,
  #     u.user_id, u.nfc_card_uid_hash, u.first_use_datetime, u.num_data_collections
  #   FROM urine_samples us
  #   JOIN spectrum_datapoints sd ON us.sample_id = sd.sample_id
  #   JOIN user u ON us.user_id = u.user_id
  #   WHERE us.user_id = ?
  #   ORDER BY us.start_timestamp DESC, sd.timestamp DESC

  fetch_user_history: |
    SELECT us.sample_id, us.start_timestamp, us.end_timestamp, us.hydration_level,
           sd.timestamp AS datapoint_timestamp, sd.batch, sd.flag, sd.led_color, sd.led_intensity,
           sd.channel_415nm, sd.channel_445nm, sd.channel_480nm, sd.channel_515nm,
           sd.channel_555nm, sd.channel_590nm, sd.channel_630nm, sd.channel_680nm,
           sd.channel_clear, sd.channel_nir
      FROM urine_samples us
      JOIN spectrum_datapoints sd ON us.sample_id = sd.sample_id
     WHERE us.user_id = ?
     ORDER BY us.start_timestamp DESC, sd.timestamp DESC


update:

  update_data: |
    UPDATE {table}
    SET {set_clause}
    WHERE {condition}

# mock:
